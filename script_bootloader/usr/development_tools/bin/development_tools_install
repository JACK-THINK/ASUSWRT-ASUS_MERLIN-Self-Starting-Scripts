#!/bin/sh
#
########## CHECK ASUS ROUTER MODEL ##########
#
ROUTER_MODEL=$(nvram get model)
#
########## END ##########
#
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT=$(nvram get script_usbmount | sed 's/\/script_bootloader.*//')
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR=${USB_MOUNT_POINT}/script_bootloader/usr
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT=${SBL_SYS_USR}/development_tools
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC=${PRIVATE_ROOT}/etc
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="DEVELOPMENT-TOOLS"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="INSTALLATION"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
logger -st "($(basename $0))" $$ "*--------- ${SERVICE_NAME} ON ${ROUTER_MODEL} ${SERVICE_FUNCTION} ---------*"
#
########## END ##########
#
#
########## INSTALLATION CONFIGURATION ##########
#
# Check the architecture of the ASUS Router
# 检查华硕路由器架构
ROUTER_ARCHITECTURE=$(uname -m)
#
########## END ##########
#
#
########## INSTALL DEVELOPMENT-TOOLS ##########
#
# Check if ENTWARE_ENABLE SERVICE has been loaded
# 检查ENTWARE_ENABLE SERVICE是否已启用
if [ $(which opkg) == "/opt/bin/opkg" ]
then
    logger -st "($(basename $0))" $$ "***** ENTWARE_ENABLE SERVICE HAS BEEN LOADED *****"
    #
    # Update the list of available packages
    # 更新可用程序包列表
    opkg update
    #
    # Install the development tools
    # 安装development tools
    opkg install $(cat ${PRIVATE_ETC}/${ROUTER_ARCHITECTURE}_list_of_packages)
    pip3 install --upgrade pip setuptools
    pip3 install certifi
    pip3 install chardet
    pip3 install urllib3
    #
    # Install all include files according to the architecture of the ASUS Router
    # 根据路由器架构，自动安装全部适当版本的include files
    if [ ${ROUTER_ARCHITECTURE} == "aarch64" ]
    then
        wget -qO- http://bin.entware.net/aarch64-k3.10/include/include.tar.gz | tar xvz -C /opt/include
    elif [ ${ROUTER_ARCHITECTURE} == "armv7l" ]
    then
        wget -qO- http://bin.entware.net/armv7sf-k2.6/include/include.tar.gz | tar xvz -C /opt/include
    #elif [ ${ROUTER_ARCHITECTURE} == "mips" ]
    #then
    #    #
    fi
    #
    # Back up /opt/etc/profile to /opt/etc/profile.bak and ${PRIVATE_ETC}/profile.bak
    # 备份文件/opt/etc/profile至/opt/etc/profile.bak和${PRIVATE_ETC}/profile.bak
    cp /opt/etc/profile ${PRIVATE_ETC}/profile.bak
    cp /opt/etc/profile /opt/etc/profile.bak
    #
    # Create and enable bashrc
    # 创建并启用bashrc
    echo -e "# User specific aliases and functions\n" > /opt/etc/bashrc
    echo -e "alias ls='ls --color=auto'\n" >> /opt/etc/bashrc
    echo -e "\n# Get the aliases and functions\nif [ -f /opt/etc/bashrc ]\nthen\n    source /opt/etc/bashrc\nfi\n" >> /opt/etc/profile
    #
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS BEEN COMPLETE *****"
    #
    # Sync
    # 同步缓存
    /opt/bin/sync
    #
    exit 0
    #
else
    # Do nothing but prompt the user
    # 如果ENTWARE_ENABLE SERVICE未启用，则执行
    logger -st "($(basename $0))" $$ "***** ENTWARE_ENABLE SERVICE HAS NOT BEEN LOADED *****"
    logger -st "($(basename $0))" $$ "***** PLEASE ENABLE ENTWARE FIRST *****"
    logger -st "($(basename $0))" $$ "***** ${SERVICE_FUNCTION} HAS NOT BEEN COMPLETE *****"
    #
    exit 1
fi
#
########## END ##########